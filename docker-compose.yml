##
## -------------------------
## |   M E D I A B O X     |
## -------------------------
##
## -- DO NOT EDIT THIS FILE --
##
## Configuration variables for this file are taken from the .env file
##
## Have docker-compose.yml and .env in the same directory to launch the stack

version: '3.5'

services:


    # ----------------------------------------
    # DELUGEVPN
    # ----------------------------------------
    arch-delugevpn:
        image: binhex/arch-delugevpn
        container_name: delugevpn
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8112:8112'
            - '${IP_ADDRESS}:8118:8118'
            - '${IP_ADDRESS}:58846:58846'
            - '${IP_ADDRESS}:58946:58946'
        cap_add:
            - NET_ADMIN
        environment:
            - VPN_ENABLED=yes
            - VPN_USER=${PIAUNAME}
            - VPN_PASS=${PIAPASS}
            - VPN_REMOTE=${VPN_REMOTE}
            - VPN_PORT=1198
            - VPN_PROTOCOL=udp
            - VPN_DEVICE_TYPE=tun
            - VPN_PROV=pia
            - STRONG_CERTS=no
            - ENABLE_PRIVOXY=yes
            - STRICT_PORT_FORWARD=yes
            - LAN_NETWORK=${CIDR_ADDRESS}
            - NAME_SERVERS=209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1
            - DEBUG=false
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${DLDIR}:/data'
            - './delugevpn/config:/config'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # DOZZLE
    # ----------------------------------------
    dozzle:
        image: amir20/dozzle:latest
        container_name: doozle
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:9999:8080'
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'



    # ----------------------------------------
    # GLANCES
    # ----------------------------------------
    glances:
        image: nicolargo/glances:latest-alpine
        container_name: glances
        restart: unless-stopped
        network_mode: "bridge"
        pid: host
        ports:
            - '${IP_ADDRESS}:61208:61208'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
            - GLANCES_OPT=-w
        volumes:
            - './glances:/config'
            - '/var/run/docker.sock:/var/run/docker.sock:ro'


    # ----------------------------------------
    # JACKETT
    # ----------------------------------------
    jackett:
        image: ghcr.io/linuxserver/jackett
        container_name: jackett
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:9117:9117'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './jackett:/config'
            - '${DLDIR}/completed:/downloads'
            - '/etc/localtime:/etc/localtime:ro'


    # ----------------------------------------
    # LIDARR
    # ----------------------------------------
    lidarr:
        image: ghcr.io/linuxserver/lidarr
        container_name: lidarr
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8686:8686'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './lidarr:/config'
            - '${DLDIR}/completed:/data/completed'
            - '${MUSICDIR}:/music'
            - '/etc/localtime:/etc/localtime:ro'


    # ----------------------------------------
    # MUXIMUX
    # ----------------------------------------
    muximux:
        image: ghcr.io/linuxserver/muximux
        container_name: muximux
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8910:80'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './muximux:/config'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # NETDATA
    # ----------------------------------------
    netdata:
        image: netdata/netdata:latest
        container_name: netdata
        hostname: '${HOSTNAME}'
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:19999:19999'
        cap_add:
            - SYS_PTRACE
        security_opt:
            - apparmor:unconfined
        environment:
            - PGID=${DOCKERGRP}
        volumes:
            - '/proc:/host/proc:ro'
            - '/sys:/host/sys:ro'
            - '/var/run/docker.sock:/var/run/docker.sock:rw'

    # ----------------------------------------
    # NZBGet
    # ----------------------------------------
    nzbget:
        image: ghcr.io/linuxserver/nzbget
        container_name: nzbget
        restart: unless-stopped
        environment:
          - PUID=${PUID}
          - PGID=${PGID}
          - TZ=${TZ}
        network_mode: 'bridge'
        ports:
          - '${IP_ADDRESS}:6789:6789'
        volumes:
          - './nzbget:/config'
          - '${DLDIR}:/downloads'

    # ----------------------------------------
    # NZBHydra2
    # ----------------------------------------
    nzbhydra2:
        image: ghcr.io/linuxserver/nzbhydra2
        container_name: nzbhydra2
        restart: unless-stopped
        environment:
          - PUID=${PUID}
          - PGID=${PGID}
          - TZ=${TZ}
        network_mode: 'bridge'
        ports:
          - '${IP_ADDRESS}:5076:5076'
        volumes:
          - './nzbhydra2:/config'
          - '${DLDIR}:/downloads'

    # ----------------------------------------
    # OMBI
    # ----------------------------------------
    ombi:
        image: ghcr.io/linuxserver/ombi
        container_name: ombi
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:3579:3579'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './ombi:/config'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # OVERSEERR
    # ----------------------------------------
    overseerr:
        image: ghcr.io/linuxserver/overseerr
        container_name: overseerr
        restart: unless-stopped
        network_mode: "bridge"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - LOG_LEVEL=info
            - TZ=${TZ}
        ports:
            - ${IP_ADDRESS}:5055:5055
        volumes:
            - ./overseerr:/config


    # ----------------------------------------
    # PORTAINER
    # ----------------------------------------
    portainer:
        image: portainer/portainer-ce
        container_name: portainer
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:9000:9000'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './portainer:/data'
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '/etc/localtime:/etc/localtime:ro'
        command: -H unix:///var/run/docker.sock

    # ----------------------------------------
    # RADARR
    # ----------------------------------------
    radarr:
        image: ghcr.io/linuxserver/radarr
        container_name: radarr
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:7878:7878'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './radarr:/config'
            - '${DLDIR}/completed:/data/completed'
            - '${MOVIEDIR}:/movies'
            - '/home/bill/mediabox/content/movies1:/movies1'
            - '/home/bill/mediabox/content/movies2:/movies2'
            - '/etc/localtime:/etc/localtime:ro'
            
    # ----------------------------------------
    # RADARR 4K
    # ----------------------------------------
    radarr4k:
        image: ghcr.io/linuxserver/radarr
        container_name: radarr4k
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:7879:7878'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './radarr:/config'
            - '${DLDIR}/completed:/data/completed'
            - '${MOVIEDIR}:/movies'
            - '/home/bill/mediabox/content/4kmovies:/4kmovies'
            - '/etc/localtime:/etc/localtime:ro'


    # ----------------------------------------
    # SONARR
    # ----------------------------------------
    sonarr:
        image: ghcr.io/linuxserver/sonarr
        container_name: sonarr
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8989:8989'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - './sonarr:/config'
            - '${DLDIR}/completed:/data/completed'
            - '${TVDIR}:/tv'
            - '/home/bill/mediabox/content/tv1:/tv1'
            - '/home/bill/mediabox/content/tv2:/tv2'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # SONARR 4K
    # ----------------------------------------
    sonarr4k:
        image: ghcr.io/linuxserver/sonarr
        container_name: sonarr4k
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8990:8989'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - './sonarr:/config'
            - '${DLDIR}/completed:/data/completed'
            - '${TVDIR}:/tv'
            - '/home/bill/mediabox/content/4ktv:/4ktv'
            - '/etc/localtime:/etc/localtime:ro'
            
            
    # ----------------------------------------
    # SPEEDTEST
    # ----------------------------------------
    speedtest:
        image: henrywhitaker3/speedtest-tracker:dev
        container_name: speedtest
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8765:80'
        environment:
            - TZ=${TZ}
            - PGID=${PGID}
            - PUID=${PUID}
            - OOKLA_EULA_GDPR=true
        volumes:
            - './speedtest:/config'

    # ----------------------------------------
    # TAUTULLI
    # ----------------------------------------
    tautulli:
        image: tautulli/tautulli
        container_name: tautulli
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8181:8181'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - './tautulli:/config'
            - './plex/Library/Application Support/Plex Media Server/Logs:/logs:ro'
        depends_on:
            - plex

    # ----------------------------------------
    # WATCHTOWER
    # ----------------------------------------
    watchtower:
        image: containrrr/watchtower
        container_name: watchtower
        restart: unless-stopped
        network_mode: "bridge"
        hostname: '${HOSTNAME}'
        environment:
            - WATCHTOWER_CLEANUP=true
            - WATCHTOWER_SCHEDULE=0 0 */4 * * *
            - WATCHTOWER_INCLUDE_STOPPED=true
            - TZ=${TZ}
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'

